# This is a basic workflow to help you get started with Actions

name: "issue-label-checks"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  issues:
    types: [opened, reopened, labeled]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called ...
  issue_label_checks:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      issues: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            let labels = context.payload.issue.labels.map(label => label.name)
            let state = labels.filter(l => l.startsWith("state:"))
            let priority = labels.filter(l => l.startsWith("priority:"))
            let other = labels.filter(l => !state.includes(l) && !priority.includes(l))

            // ensure there is at most one state and at most one priority label
            state = state.slice(0,1)
            priority = priority.slice(0,1)

            let final = other.concat(state).concat(priority)

            if (!labels.every(l => final.includes(l))) {
              // set the new labels if some labels were filtered out
              github.rest.issues.setLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: final
              })

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "\"state\" and \"priority\" labels must be unique!"
              })
            }
